name: CI CD

on:  
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

env:
  DOTNET_VERSION: 5.0.101
  CONFIGURATION: Release
  NUGET_PACKAGE_NAME: src/GreetUser.Lib/bin/Release/GreetUser.1.4.4.nupkg

jobs:
  build-test:    
    runs-on: ubuntu-latest   
    name: Build and test
    steps:
    - name: Checkout code
      uses: actions/checkout@v2      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}    
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore    
    - name: Test
      run: dotnet test --configuration ${{ env.CONFIGURATION }}

  github-nuget-push:
    if: ${{ github.event_name == 'push' || github.event_name == 'release' }}
    runs-on: ubuntu-latest
    needs: build-test
    name: GitHub nuget push
    steps:
    - name: Checkout code
      uses: actions/checkout@v2      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}    
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore 
    - name: Create nuget package
      run: dotnet pack --configuration ${{ env.CONFIGURATION }} /p:ContinuousIntegrationBuild=true
    - name: Push nuget package
      run: dotnet nuget push ${{ env.NUGET_PACKAGE_NAME }} --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/Arnab-Developer/index.json --skip-duplicate

  nuget-org-push:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    needs: build-test
    name: nuget org push
    environment:
      name: "nugetenv"
    steps:
    - name: Checkout code
      uses: actions/checkout@v2      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}    
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore 
    - name: Create nuget package
      run: dotnet pack --configuration ${{ env.CONFIGURATION }} /p:ContinuousIntegrationBuild=true
    - name: Push nuget package
      run: dotnet nuget push ${{ env.NUGET_PACKAGE_NAME }} --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate